!function(){"use strict";function e(e){e.when("/:roomId/s",{controller:"SearchController",templateUrl:"search/search.html"}).when("/:roomId",{controller:"QueueController",templateUrl:"queue/queue.html"}).when("/",{controller:"HomeController",templateUrl:"home/home.html"}).otherwise({redirectTo:"/"})}angular.module("jukebox",["ngRoute","ngAnimate","ui.bootstrap","as.sortable","ngTouch","ngCookies"]).config(e),e.$inject=["$routeProvider"]}(),function(){"use strict";angular.module("jukebox").factory("sharedRoomData",function(){var e={roomId:"",roomName:"",passwordProtected:!1,roomPassword:"",userId:"",userName:"",queue:{}};return e})}(),function(){"use strict";function e(){return{restrict:"A",replace:!0,scope:{roomId:"="},templateUrl:"common/plusButton/plusButton.html",controller:["$scope",function(){}]}}angular.module("jukebox").directive("plusButton",e)}(),function(){"use strict";function e(){return{restrict:"A",replace:!0,scope:{currentlyPlaying:"="},templateUrl:"common/header/header.html"}}angular.module("jukebox").directive("header",e)}(),function(){"use strict";function e(){return{restrict:"A",replace:!0,scope:{},templateUrl:"common/footer/footer.html"}}angular.module("jukebox").directive("footer",e)}(),function(){"use strict";angular.module("jukebox").factory("backendAPI",["$http",function(e){var o="/api",r={};e.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8";var t=function(e){var o,r,n,s,a,u,c,l="";for(o in e)if(r=e[o],r instanceof Array)for(c=0;c<r.length;++c)a=r[c],n=o+"["+c+"]",u={},u[n]=a,l+=t(u)+"&";else if(r instanceof Object)for(s in r)a=r[s],n=o+"["+s+"]",u={},u[n]=a,l+=t(u)+"&";else void 0!==r&&null!==r&&(l+=encodeURIComponent(o)+"="+encodeURIComponent(r)+"&");return l.length?l.substr(0,l.length-1):l};return e.defaults.transformRequest=[function(e){return angular.isObject(e)&&"[object File]"!==String(e)?t(e):e}],r.registerUser=function(r){return e.post(o+"/register_user",r)},r.changeUsername=function(r){return e.post(o+"/change_username",r)},r.joinRoom=function(r){return e.post(o+"/join_room",r)},r.getSongQueue=function(r){return e({method:"GET",url:o+"/get_song_queue",params:r})},r.addSong=function(r){return e.post(o+"/submit_song",r)},r.reorderSong=function(r){return e.post(o+"/reorder_song",r)},r.deleteSong=function(r){return e.post(o+"/delete_song",r)},r}])}(),function(){"use strict";angular.module("jukebox").controller("QueueController",["$scope","$routeParams","$cookies","backendAPI","sharedRoomData",function(e,o,r,t,n){function s(e){t.registerUser({username:e}).success(function(e){"OK"===e.status?(n.userId=e.data,r.put("jb_user_name",n.userName),r.put("jb_user_id",n.userId),a(),console.log("OK backendAPI.registerUser",e)):console.log("NOT OK backendAPI.registerUser",e)}).error(function(e){console.log("ERROR backendAPI.registerUser",e)})}function a(){t.joinRoom({room_id:n.roomId,user_id:n.userId,password:n.password}).success(function(e){"OK"===e.status?(console.log("OK backendAPI.joinRoom",e),u()):("The correct password was not provided."==e.message&&(n.passwordProtected=!0,n.password=window.prompt("Enter the password:"),r.put(n.roomId,n.password),a()),console.log("NOT OK backendAPI.joinRoom",e))}).error(function(e){console.log("ERROR backendAPI.joinRoom",e)})}function u(){t.getSongQueue({room_id:n.roomId,password:n.password}).success(function(e){"OK"===e.status?(n.roomName=e.room_name,n.queue=e.data,console.log("OK backendAPI.getSongQueue",e)):("The correct password was not provided."==e.message&&(n.passwordProtected=!0,n.password=window.prompt("Enter the password:"),r.put(n.roomId,n.password),u()),console.log("NOT OK backendAPI.getSongQueue",e))}).error(function(e){console.log("ERROR backendAPI.getSongQueue",e)})}function c(e,o){t.reorderSong({room_id:n.roomId,user_id:n.userId,password:n.password,song_id:e,new_pos:o}).success(function(e){"OK"===e.status?(console.log("OK backendAPI.reorderSong",e),u()):console.log("NOT OK backendAPI.reorderSong",e)}).error(function(){console.log("ERROR backendAPI.reorderSong",error)})}function l(e){t.deleteSong({room_id:n.roomId,user_id:n.userId,password:n.password,song_id:e}).success(function(e){"OK"===e.status?(console.log("OK backendAPI.deleteSong",e),u()):console.log("NOT OK backendAPI.deleteSong",e)}).error(function(){console.log("ERROR backendAPI.deleteSong",error)})}e.pageClass="queue-page",e.room=n,n.roomId=o.roomId,e.roomId=n.roomId;var i=["banana","apple","peach","mango","cherry","grape","pear","plum","pineapple","kiwi"];n.userId=r.get("jb_user_id"),n.userName=r.get("jb_user_name"),n.password=r.get(n.roomId)?r.get(n.roomId):"",n.userId&&n.userName?(console.log("You already have a username! It is",n.userName),a()):(n.userName=i[Math.floor(Math.random()*i.length)],console.log("Your username will be",n.userName),s(n.userName)),e.dragControlListeners={accept:function(){return!0},itemMoved:function(){},orderChanged:function(e){var o=e.source.itemScope.element[0].dataset.uuid,r=e.dest.index;c(o,r)}},e.deleteSong=function(e){var o=e.target.parentElement.dataset.uuid;l(o)}}])}(),function(){"use strict";function e(){return{restrict:"A",replace:!0,scope:{},templateUrl:"search/search.html",controller:["$scope",function(){}]}}angular.module("jukebox").directive("search",e)}(),function(){"use strict";function e(e,o,r,t,n){function s(){t.getSongQueue({room_id:n.roomId,password:n.password}).success(function(e){"OK"===e.status?(n.roomName=e.room_name,n.queue=e.data,console.log("OK backendAPI.getSongQueue",e)):console.log("NOT OK backendAPI.getSongQueue",e)}).error(function(e){console.log("ERROR backendAPI.getSongQueue",e)})}e.pageClass="search-page",e.roomId=o.roomId,e.myData={},e.myData.spotify={},e.myData.sendQuery=function(){var o=r.get("https://api.spotify.com/v1/search",{params:{q:e.searchText,type:"track"}});o.success(function(o){e.myData.spotify.results=o.tracks.items}),o.error(function(){e.myData.spotify={},console.log("ERROR returning results from spotify")})},e.addSong=function(e,o,r,a,u){t.addSong({room_id:n.roomId,user_id:n.userId,password:n.password,url:e,track:o,artist:r,album:a,album_art_url:u}).success(function(e){"OK"===e.status?($("#slide-bottom-popup").modal("hide"),s(),console.log("OK backendAPI.addSong",e)):console.log("NOT OK backendAPI.addSong",e)}).error(function(e){console.log("ERROR backendAPI.addSong",e)})}}angular.module("jukebox").controller("SearchController",e),e.$inject=["$scope","$routeParams","$http","backendAPI","sharedRoomData"]}(),function(){"use strict";function e(e){e.pageClass="home-page"}angular.module("jukebox").controller("HomeController",e),e.$inject=["$scope"]}(),function(e){try{e=angular.module("jukebox")}catch(o){e=angular.module("jukebox",[])}e.run(["$templateCache",function(e){e.put("/jukebox/home/home.html",'<div class="home-page"><div class="jb-icon"><svg><use xlink:href="#plus-icon"></use></svg></div></div>')}])}(),function(e){try{e=angular.module("jukebox")}catch(o){e=angular.module("jukebox",[])}e.run(["$templateCache",function(e){e.put("/jukebox/queue/queue.html",'<div class="container"><div header currently-playing="room.queue[0]"></div><div ng-if="queueData.length > 0"><span>Your Song Queue</span></div><div class="song-queue" data-as-sortable="dragControlListeners" data-ng-model="room.queue"><div ng-repeat="song in room.queue"><div class="song-queue-item noselect" data-uuid="{{ song.unique_id }}" data-as-sortable-item ng-swipe-left="showDeleteButton = true" ng-swipe-right="showDeleteButton = false"><img src="{{ song.image_url }}" class="song-image"><div class="song-info"><div class="song-title">{{ song.track }}</div><div class="song-artist">{{ song.artist }}</div><div class="song-user">@{{ song.submitter }}</div></div><i class="fa fa-th-list drag-button" ng-show="!showDeleteButton" data-as-sortable-item-handle></i> <i class="fa fa-trash fa-lg delete-button" ng-show="showDeleteButton" ng-click="deleteSong($event)"></i></div></div></div></div><div plus-button room-id="roomId"></div>')}])}(),function(e){try{e=angular.module("jukebox")}catch(o){e=angular.module("jukebox",[])}e.run(["$templateCache",function(e){e.put("/jukebox/search/search.html",'<div class="search-wrapper"><div class="search-header-items"><div class="search-header-item close"><a href="#/{{ roomId }}"><span>Cancel</span></a></div><div class="search-header-item search"><input id="song-search-box" type="search" ng-model="searchText" ng-model-options="{ debounce: 500 }" ng-change="myData.sendQuery()" autofocus></div></div><div class="song-search-results"><div ng-if="myData.spotify.results.length > 0"><span>Spotify Results</span></div><div ng-repeat="result in myData.spotify.results"><div ng-click="addSong(result.uri, result.name, result.artists[0].name, result.album.name, result.album.images[0].url)" class="song-search-result"><img src="{{ result.album.images[0].url }}" class="song-image"><div class="song-info"><div class="song-title">{{ result.name }}</div><div class="song-artist">{{ result.artists[0].name }}</div></div></div></div></div></div>')}])}(),function(e){try{e=angular.module("jukebox")}catch(o){e=angular.module("jukebox",[])}e.run(["$templateCache",function(e){e.put("/jukebox/common/header/header.html",'<div class="header"><div class="header-info"><div class="header-label song"><span>{{ currentlyPlaying.track }}</span></div><div class="header-label artist"><span>{{ currentlyPlaying.artist }}</span></div></div><div class="record-player"><div class="record" ng-if="currentlyPlaying"><img src="{{ currentlyPlaying.image_url }}"></div></div></div>')}])}(),function(e){try{e=angular.module("jukebox")}catch(o){e=angular.module("jukebox",[])}e.run(["$templateCache",function(e){e.put("/jukebox/common/footer/footer.html",'<div class="footer"><div class="footer-label"><span>Jukebox App</span></div><div class="footer-copyright"><span>&copy; 2016, All rights reserved.</span></div></div>')}])}(),function(e){try{e=angular.module("jukebox")}catch(o){e=angular.module("jukebox",[])}e.run(["$templateCache",function(e){e.put("/jukebox/common/plusButton/plusButton.html",'<a href="#/{{ roomId }}/s" class="plus-button"><div class="plus-icon"><svg><use xlink:href="#plus-icon"></use></svg></div></a>')}])}();